AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "resume-parser-app\n"
Resources:
  UploadToS3ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
      RoleName: UploadToS3ExecutionRole
  UploadToS3ExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaPutObjectPolicy
      Roles:
      - Ref: UploadToS3ExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:PutObject
          Resource:
            Fn::GetAtt:
            - StoreBucket
            - Arn
  UploadLambdaLogs:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaPutLogsPolicy
      Roles:
      - Ref: UploadToS3ExecutionRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:*
          Resource: '*'
  StoreBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: StoreBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:PutObject
          Resource:
            Fn::Join:
            - /
            - - Fn::GetAtt:
                - StoreBucket
                - Arn
              - '*'
          Principal: '*'
  StoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
        - '-'
        - - resume-parser
          - Ref: AWS::Region
          - Ref: AWS::AccountId
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
  UploadToS3LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: upload-resume-to-s3
      CodeUri: s3://resume-parser-sam-artifact/d669debae017c217ae6ce9733be9d376
      Handler: upload_to_s3.lambda_handler
      Runtime: python3.9
      Events:
        UploadToS3:
          Type: Api
          Properties:
            Path: /upload-resume
            Method: POST
            RestApiId:
              Ref: UploadToS3API
      Role:
        Fn::GetAtt:
        - UploadToS3ExecutionRole
        - Arn
      Environment:
        Variables:
          UPLOAD_S3_NAME:
            Ref: StoreBucket
  UploadToS3API:
    Type: AWS::Serverless::Api
    Properties:
      Name: resume-parser-api
      StageName: dev
      BinaryMediaTypes:
      - application/pdf
